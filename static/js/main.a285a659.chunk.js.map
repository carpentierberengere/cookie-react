{"version":3,"sources":["components/CookieClicker.jsx","components/Item.jsx","App.js","index.js"],"names":["CookieClicker","incrementCurrency","className","onClick","Item","amount","incrementAmount","App","props","setState","currency","state","toClick","subtractCurrency","price","incrementAmountToClick","addAmount","incrementAmountToSecond","toSecond","getCurrency","setInterval","saveCurrentState","localStorage","setItem","JSON","stringify","initialState","parse","getItem","this","Math","round","time","Component","ReactDOM","render","document","getElementById"],"mappings":"2PAEe,SAASA,EAAT,GAA+C,IAAtBC,EAAqB,EAArBA,kBACtC,OACE,8BACE,qBAAKC,UAAU,gBAAgBC,QAASF,MCH/B,SAASG,EAAT,GAA4C,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,gBACrC,OACE,qBAAKJ,UAAU,aAAaC,QAASG,EAArC,SACE,iCACGD,EADH,IACW,mBAAGH,UAAU,oB,ICsHfK,E,kDAtHb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA2BRP,kBAAoB,WAClB,EAAKQ,SAAS,CACZC,SAAU,EAAKC,MAAMD,SAAW,EAAKC,MAAMN,OAAOO,WA9BnC,EAkCnBC,iBAAmB,SAAAC,GACjB,OAAI,EAAKH,MAAMD,UAAYI,IACzB,EAAKL,SAAS,CACZC,SAAU,EAAKC,MAAMD,SAAWI,KAE3B,IAvCQ,EA4CnBC,uBAAyB,SAACD,EAAOE,GAC3B,EAAKH,iBAAiBC,IACxB,EAAKL,SAAS,CACZJ,OAAO,2BACF,EAAKM,MAAMN,QADV,IAEJO,QAAS,EAAKD,MAAMN,OAAOO,QAAUI,OAjD1B,EAuDnBC,wBAA0B,SAACH,EAAOE,GAC5B,EAAKH,iBAAiBC,IACxB,EAAKL,SAAS,CACZJ,OAAO,2BACF,EAAKM,MAAMN,QADV,IAEJa,SAAU,EAAKP,MAAMN,OAAOa,SAAWF,OA5D5B,EAkEnBG,YAAc,WACZC,aAAY,WACN,EAAKT,MAAMN,OAAOa,SAAW,GAC/B,EAAKT,SAAS,CACZC,SAAU,EAAKC,MAAMD,SAAW,EAAKC,MAAMN,OAAOa,SAAW,MAGhE,MAzEc,EA4EnBG,iBAAmB,WACjBD,aAAY,WACVE,aAAaC,QAAQ,SAAUC,KAAKC,UAAU,EAAKd,UAClD,MA5EH,EAAKA,MAAQ,CACXD,SAAU,EACVL,OAAQ,CACNO,QAAS,EACTM,SAAU,IAPG,E,sDAYnB,WACE,IAAIQ,EAAeF,KAAKG,MAAML,aAAaM,QAAQ,WAC/CF,GAEFG,KAAKpB,SAAS,CACZC,SAAUgB,EAAahB,SACvBL,OAAQ,CACNO,QAASc,EAAarB,OAAOO,QAC7BM,SAAUQ,EAAarB,OAAOa,YAIpCW,KAAKV,cACLU,KAAKR,qB,oBAyDP,WAAU,IAAD,OACP,OACE,uBAAMnB,UAAU,MAAhB,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,WAAf,UACG4B,KAAKC,MAAMF,KAAKlB,MAAMD,UAAW,IAClC,uCAAUmB,KAAKlB,MAAMN,OAAOa,eAE9B,cAAClB,EAAD,CACEgC,KAAK,MACL/B,kBAAmB4B,KAAK5B,uBAG5B,sBAAKC,UAAU,OAAf,UACE,cAACE,EAAD,CACEC,OAAO,IACPC,gBAAiB,kBAAM,EAAKS,uBAAuB,EAAG,MAExD,cAACX,EAAD,CACEC,OAAO,KACPC,gBAAiB,kBAAM,EAAKS,uBAAuB,GAAI,OAEzD,cAACX,EAAD,CACEC,OAAO,MACPC,gBAAiB,kBAAM,EAAKW,wBAAwB,IAAK,MAE3D,cAACb,EAAD,CACEC,OAAO,OACPC,gBAAiB,kBAAM,EAAKW,wBAAwB,IAAM,iB,GA/GpDgB,aCClBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a285a659.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function CookieClicker({ incrementCurrency }) {\n  return (\n    <div>\n      <div className=\"cookie-button\" onClick={incrementCurrency} />\n    </div>\n  );\n}","import React from \"react\";\n\nexport default function Item({ amount, incrementAmount }) {\n  return (\n    <div className=\"store-item\" onClick={incrementAmount}>\n      <span>\n        {amount} <i className=\"icon-price\" />\n      </span>\n    </div>\n  );\n}","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CookieClicker from \"./components/CookieClicker\";\nimport Item from \"./components/Item\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currency: 0,\n      amount: {\n        toClick: 1,\n        toSecond: 0\n      }\n    };\n  }\n\n  componentWillMount() {\n    let initialState = JSON.parse(localStorage.getItem(\"cookie\"));\n    if (initialState) {\n      // load the initial state from localStorage\n      this.setState({\n        currency: initialState.currency,\n        amount: {\n          toClick: initialState.amount.toClick,\n          toSecond: initialState.amount.toSecond\n        }\n      });\n    }\n    this.getCurrency();\n    this.saveCurrentState();\n  }\n\n  incrementCurrency = () => {\n    this.setState({\n      currency: this.state.currency + this.state.amount.toClick\n    });\n  };\n\n  subtractCurrency = price => {\n    if (this.state.currency >= price) {\n      this.setState({\n        currency: this.state.currency - price\n      });\n      return true;\n    }\n    return false;\n  };\n\n  incrementAmountToClick = (price, addAmount) => {\n    if (this.subtractCurrency(price)) {\n      this.setState({\n        amount: {\n          ...this.state.amount,\n          toClick: this.state.amount.toClick + addAmount\n        }\n      });\n    }\n  };\n\n  incrementAmountToSecond = (price, addAmount) => {\n    if (this.subtractCurrency(price)) {\n      this.setState({\n        amount: {\n          ...this.state.amount,\n          toSecond: this.state.amount.toSecond + addAmount\n        }\n      });\n    }\n  };\n\n  getCurrency = () => {\n    setInterval(() => {\n      if (this.state.amount.toSecond > 0) {\n        this.setState({\n          currency: this.state.currency + this.state.amount.toSecond / 5\n        });\n      }\n    }, 200);\n  };\n\n  saveCurrentState = () => {\n    setInterval(() => {\n      localStorage.setItem(\"cookie\", JSON.stringify(this.state));\n    }, 3000);\n  };\n\n  render() {\n    return (\n      <main className=\"App\">\n        <div className=\"header\">\n          <div className=\"currency\">\n            {Math.round(this.state.currency)}{\" \"}\n            <span> - {this.state.amount.toSecond}</span>\n          </div>\n          <CookieClicker\n            time=\"200\"\n            incrementCurrency={this.incrementCurrency}\n          />\n        </div>\n        <div className=\"menu\">\n          <Item\n            amount=\"5\"\n            incrementAmount={() => this.incrementAmountToClick(5, 3)}\n          />\n          <Item\n            amount=\"25\"\n            incrementAmount={() => this.incrementAmountToClick(25, 15)}\n          />\n          <Item\n            amount=\"500\"\n            incrementAmount={() => this.incrementAmountToSecond(500, 5)}\n          />\n          <Item\n            amount=\"8000\"\n            incrementAmount={() => this.incrementAmountToSecond(8000, 80)}\n          />\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n\n\n"],"sourceRoot":""}